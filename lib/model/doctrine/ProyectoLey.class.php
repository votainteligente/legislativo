<?php

/**
 * ProyectoLey
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    vota
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7021 2010-01-12 20:39:49Z lsmith $
 */
class ProyectoLey extends BaseProyectoLey
{
  public function __toString()
  {
    return $this->getNroBoletin();
  }

  /*
    $state_num:
    0: todas
    1: Publicado: Tramitación terminada
    2: Rechazado: Inconstitucional, Inadmisible, Rechazado
    3: En tramitación: Primer trámite constitucional, Segundo trámite constitucional, Tercer trámite constitucional, Trámite de aprobacion presidencial
    4: Retirado: 
    5: Archivado: Archivado, Solicitud de archivo
  */
  public function countProyectos($y1,$y2,$state_num=0)
  {
    //separar por periodos de ingreso
    $limit = '-03-10';
    if ($y1 != null && $y2 != null) {
      $f1 = date($y1.$limit);
      $f2 = date($y2.$limit);
    } else {
      $f1 = date('1990'.$limit);
      $f2 = date('1994'.$limit);
    }

    //separar por estados de la ley
    $state = null; $state1 = null; $state2 = null; $state3 = null; $state4 = null; $state5 = null; $state6 = null; $state7 = null; $state8 = null; $state9 = null; $state10 = null; $state11 = null; $state12 = null; $state13 = null; $state14 = null;
    $substate = null; $substate1 = null; $substate2 = null;
    switch($state_num){
      case 1: 
        $state = 'Tramitación terminada';
        $substate = ' ';
        break;
      case 2: 
        $state = 'Tramitación terminada';
        $substate = 'Inconstitucional';
        $substate1 = 'Inadmisible'; 
        $substate2 = 'Rechazado'; 
        break;
      case 3: 
        $state = 'Primer trámite constitucional'; 
        $state1 = 'Segundo trámite constitucional'; 
        $state2 = 'Tercer trámite constitucional'; 
        $state3 = 'Trámite de aprobacion presidencial';
        $state4 = 'Discusión veto en Cámara Revisora';
        $state5 = 'Comisión Mixta por rechazo de modificaciones';
        $state6 = 'Trámite en Tribunal Constitucional';
        $state7 = 'Trámite finalización en Cámara de Origen';
        $state8 = 'Comisión Mixta por rechazo de idea de legislar';
        $state9 = 'Disc. informe C.Mixta por rechazo de modif. C. Revisora';
        $state10 = 'Disc. informe C.Mixta por rechazo idea de legislar C. Origen';
        $state11 = 'Disc. Informe C.Mixta por rechazo idea de legislar C. Revis.';
        $state12 = 'Discusión veto en Cámara de Origen';
        $state13 = 'En espera de insistencia';
        $state14 = 'Insistencia';
        break;
      case 4: 
        $state = 'Tramitación terminada';
        $substate = 'Retirado'; 
        break;
      case 5: 
        $state = 'Archivado';
        $state1= 'Solicitud de archivo';
        break;
      case 0:
      default:
    }

    //base query
    $q = Doctrine_Query::create()
      ->from('ProyectoLey p')
      ->where('p.fecha_ingreso > ? AND p.fecha_ingreso <= ?', array($f1,$f2));

    //build query según estado
    if ($state14 != null) {
      $q = $q->andWhere('p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ?', array($state,$state1,$state2,$state3,$state4,$state5,$state6,$state7,$state8,$state9,$state10,$state11,$state12,$state13,$state14));
    }
    else if ($state1 != null) {
      $q = $q->andWhere('p.etapa = ? OR p.etapa = ?', array($state,$state1));
    }
    else if ($state != null) {
      $q = $q->andWhere('p.etapa = ?', $state);
      //sub-etapas
      if ($substate2 != null) {
        $q = $q->andWhere('p.sub_etapa = ? OR p.sub_etapa = ? OR p.sub_etapa = ?', array($substate,$substate1,$substate2));
      }
      else if ($substate != null) {
        $q = $q->andWhere('p.sub_etapa = ?', $substate);
      }
    }
    $q = $q->addOrderBy('p.fecha_ingreso DESC');
   
    return Doctrine_Core::getTable('ProyectoLey')->countProyectos($q);
  }
  
  /*
    $var1 = Proyectos
    $var2 = Años
    $var3 = Autor
    $var4 = Cámara
    $var5 = Materia
    $var6 = Etapa
  */
  public function countBalance($var1,$var2,$var3,$var4,$var5,$var6)
  {
    //base query
    $q = Doctrine_Query::create()->from('ProyectoLey p');

    //filtrar por periodos de ingreso
    if ($var2 != null){
      if ($var1 == 'Ingresados') {
        if ($var2=='2006') 
          $q = $q->andWhere('p.fecha_ingreso >= ? AND p.fecha_ingreso <= ?', array(date($var2.'-03-11'),date($var2.'-12-31')));
        else if ($var2=='2010') 
          $q = $q->andWhere('p.fecha_ingreso >= ? AND p.fecha_ingreso <= ?', array(date($var2.'-01-01'),date($var2.'-03-10')));
        else
          $q = $q->andWhere('p.fecha_ingreso >= ? AND p.fecha_ingreso <= ?', array(date($var2.'-01-01'),date($var2.'-12-31')));
      } 
      else if ($var1 == 'Publicados') {
        if ($var2=='2006') 
          $q = $q->andWhere('p.fecha_publicacion >= ? AND p.fecha_publicacion <= ?', array(date($var2.'-03-11'),date($var2.'-12-31')));
          else if ($var2=='2010') 
        $q = $q->andWhere('p.fecha_publicacion >= ? AND p.fecha_publicacion <= ?', array(date($var2.'-01-01'),date($var2.'-03-10')));
        else
          $q = $q->andWhere('p.fecha_publicacion >= ? AND p.fecha_publicacion <= ?', array(date($var2.'-01-01'),date($var2.'-12-31')));
      }
    }

    //filtrar por iniciativas
    if ($var3 != null) $q = $q->andWhere('p.iniciativa = ?', $var3);
 
    //filtrar por camara de origen
    if ($var4 != null) $q = $q->andWhere('p.camara_origen = ?', $var4);

    //filtrar por materias
    if ($var5 != null) {
      foreach ($var5 as $j=>$super) {
        if (!is_array($super)) $super = explode(",",$super);
        foreach ($super as $i=>$materia) {
          if ($i==0 && $j==0) $q_str2 = 'p.id_materia = ?';
          else $q_str2 .= ' OR p.id_materia = ?';
          $q_val2[] = $materia;
        }
      }
      $q = $q->andWhere($q_str2, $q_val2);
    }

    //filtrar por etapas
    if ($var1 == 'Ingresados') $q = $this->getQueryPorEtapa($var6, $q);
    else $q = $this->getQueryPorEtapa(1, $q);

    return $q->count();
  }

  public function getQueryPorEtapa($etapa, $q)
  {
    //separar por estados de la ley
    $state = null; $state1 = null; $state2 = null; $state3 = null; $state4 = null; $state5 = null; $state6 = null; $state7 = null; $state8 = null; $state9 = null; $state10 = null; $state11 = null; $state12 = null; $state13 = null; $state14 = null;
    $substate = null; $substate1 = null; $substate2 = null;
    switch($etapa){
      case 1: 
        $state = 'Tramitación terminada';
        $substate = ' ';
        break;
      case 2: 
        $state = 'Tramitación terminada';
        $substate = 'Inconstitucional';
        $substate1 = 'Inadmisible'; 
        $substate2 = 'Rechazado'; 
        break;
      case 3: 
        $state = 'Primer trámite constitucional'; 
        $state1 = 'Segundo trámite constitucional'; 
        $state2 = 'Tercer trámite constitucional'; 
        $state3 = 'Trámite de aprobacion presidencial';
        $state4 = 'Discusión veto en Cámara Revisora';
        $state5 = 'Comisión Mixta por rechazo de modificaciones';
        $state6 = 'Trámite en Tribunal Constitucional';
        $state7 = 'Trámite finalización en Cámara de Origen';
        $state8 = 'Comisión Mixta por rechazo de idea de legislar';
        $state9 = 'Disc. informe C.Mixta por rechazo de modif. C. Revisora';
        $state10 = 'Disc. informe C.Mixta por rechazo idea de legislar C. Origen';
        $state11 = 'Disc. Informe C.Mixta por rechazo idea de legislar C. Revis.';
        $state12 = 'Discusión veto en Cámara de Origen';
        $state13 = 'En espera de insistencia';
        $state14 = 'Insistencia';
        break;
      case 4: 
        $state = 'Tramitación terminada';
        $substate = 'Retirado'; 
        break;
      case 5: 
        $state = 'Archivado';
        $state1= 'Solicitud de archivo';
        break;
      case 0:
      default:
    }

    //build query según estado
    if ($state14 != null) {
      $q = $q->andWhere('p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ? OR p.etapa = ?', array($state,$state1,$state2,$state3,$state4,$state5,$state6,$state7,$state8,$state9,$state10,$state11,$state12,$state13,$state14));
    }
    else if ($state1 != null) {
      $q = $q->andWhere('p.etapa = ? OR p.etapa = ?', array($state,$state1));
    }
    else if ($state != null) {
      $q = $q->andWhere('p.etapa = ?', $state);
      //sub-etapas
      if ($substate2 != null) {
        $q = $q->andWhere('p.sub_etapa = ? OR p.sub_etapa = ? OR p.sub_etapa = ?', array($substate,$substate1,$substate2));
      }
      else if ($substate != null) {
        $q = $q->andWhere('p.sub_etapa = ?', $substate);
      }
    }
    
    return $q;
  }

  /*
    Devuelve debates para este ProyectoLey
  */
  public function getDebates($id)
  {
    $q = Doctrine_Query::create()
      ->select('d.*')
      ->from('Debate d')
      ->where('d.id_proyecto_ley = ?', $id)
      ->orderBy('d.fecha DESC, d.hora DESC');

    return $q->execute();
  }

  /*
    Devuelve autores para este ProyectoLey
  */
  public function getAutores($autoresLey)
  {
    $q = Doctrine_Query::create()
      ->select('a.*')
      ->from('Autor a');
      
    foreach ($autoresLey as $autorLey){
      $q = $q->orWhere('a.id_autor = ?', $autorLey->getIdAutor());
    }
    return $q->execute();
  }
  
  /*
    Devuelve votaciones en sala para este ProyectoLey
  */
  public function getVotacionesSala($id)
  {
    $q = Doctrine_Query::create()
      ->select('v.*')
      ->from('Votacion v')
      ->where('v.id_proyecto_ley = ?', $id)
      ->andWhere('v.en_sala = ?', 1)
      ->orderBy('v.fecha DESC, v.hora DESC');

    return $q->execute();
  }

  
  /*
    Devuelve votaciones de comisiones para este ProyectoLey
  */
  public function getVotacionesComision($id)
  {
    $q = Doctrine_Query::create()
      ->select('v.*')
      ->from('VotacionComision v')
      ->where('v.id_proyecto_ley = ?', $id)
      ->orderBy('v.id_votacion ASC');

    return $q->execute();
  }
}
